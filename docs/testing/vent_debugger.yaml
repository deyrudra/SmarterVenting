# This script allows you to go through from 0% to 100% of the servo range.
# Created by: deyrudra 2027-07-26

# Currently using a knockoff MG90 (metal gears). However for some reason after movement the motor
# seems to jitter in place. This doesn't happen in the Arduino IDE, only in ESPHome in HAOS.
# The fix I found was to put this after any Servo write operation:
  # - delay: 2s
  # - servo.detach:
  # id: my_servo
  # - output.turn_off: pwm_output


esphome:
  name: smartventrudra
  friendly_name: SmartVentRudra


esp8266:
  board: d1_mini


# Enable logging
logger:


# Enable Home Assistant API
api:
  encryption:
    key: "fzPuvc9uODtm0MpivgpgfTrQqtNR/uK4RER6ADW4JE0="


ota:
  - platform: esphome
    password: "b60757c696fc1334de0db2c6c406af73"


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password


  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Smartventrudra Fallback Hotspot"
    password: "nmsitrvfmF86"


captive_portal:




# Servo setup


servo:
  - id: my_servo
    output: pwm_output
    transition_length: 0.6s


output:
  - platform: esp8266_pwm
    id: pwm_output
    pin: D3
    frequency: 50hz


button:
  - platform: template
    name: "test 1"
    on_press:
      then:
        - servo.write:
            id: my_servo
            level: 100%
        - delay: 2s
        - servo.detach:
            id: my_servo
        - output.turn_off: pwm_output
        
  - platform: template
    name: "test 2"
    on_press:
      then:
        - servo.write:
            id: my_servo
            level: 80%
        - delay: 2s
        - servo.detach:
            id: my_servo
        - output.turn_off: pwm_output

  - platform: template
    name: "test 3"
    on_press:
      then:
        - servo.write:
            id: my_servo
            level: 60%
        - delay: 2s
        - servo.detach:
            id: my_servo
        - output.turn_off: pwm_output

  - platform: template
    name: "test 4"
    on_press:
      then:
        - servo.write:
            id: my_servo
            level: 40%
        - delay: 2s
        - servo.detach:
            id: my_servo
        - output.turn_off: pwm_output

  - platform: template
    name: "test 5"
    on_press:
      then:
        - servo.write:
            id: my_servo
            level: 0%
        - delay: 2s
        - servo.detach:
            id: my_servo
        - output.turn_off: pwm_output

  - platform: template
    name: "test 6"
    on_press:
      then:
        - servo.write:
            id: my_servo
            level: -20%
        - delay: 2s
        - servo.detach:
            id: my_servo
        - output.turn_off: pwm_output

  - platform: template
    name: "test 7"
    on_press:
      then:
        - servo.write:
            id: my_servo
            level: -40%
        - delay: 2s
        - servo.detach:
            id: my_servo
        - output.turn_off: pwm_output

  - platform: template
    name: "test 8"
    on_press:
      then:
        - servo.write:
            id: my_servo
            level: -60%
        - delay: 2s
        - servo.detach:
            id: my_servo
        - output.turn_off: pwm_output

  - platform: template
    name: "test 9"
    on_press:
      then:
        - servo.write:
            id: my_servo
            level: -80%
        - delay: 2s
        - servo.detach:
            id: my_servo
        - output.turn_off: pwm_output

  - platform: template
    name: "test 10"
    on_press:
      then:
        - servo.write:
            id: my_servo
            level: -100%
        - delay: 2s
        - servo.detach:
            id: my_servo
        - output.turn_off: pwm_output


switch:
  - platform: template
    name: "Deep Sleep Control"
    id: deep_sleep_switch
    optimistic: true
    turn_on_action:
      - deep_sleep.prevent: deep_sleep_mode
    turn_off_action:
      - deep_sleep.enter: deep_sleep_mode

deep_sleep:
  id: deep_sleep_mode
  run_duration: 60s
  sleep_duration: 60s